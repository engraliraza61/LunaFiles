// <auto-generated />
using System;
using Luna.Recruitment.VisaProcessing.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Luna.Recruitment.VisaProcessing.Data.Migrations
{
    [DbContext(typeof(lunaContext))]
    partial class lunaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.DTO.ReportDto", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArivalDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Balance")
                        .HasColumnType("bigint");

                    b.Property<string>("BiometricReceivingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BiometricSendingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNIC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfCloure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartureDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeploymentDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentHandOverDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENumberDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicalOnlineReceivingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicalOnlineSendingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OEPCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportReceivingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportSubmissionDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectorFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectorTO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicketNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TotalExpenses")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalReceivable")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalReceived")
                        .HasColumnType("bigint");

                    b.Property<string>("Trade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TradeId")
                        .HasColumnType("int");

                    b.Property<string>("VisaNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisaNumberDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("VisaProcessId")
                        .HasColumnType("bigint");

                    b.Property<long?>("VisaProcessId1")
                        .HasColumnType("bigint");

                    b.Property<long?>("VisaProcessId2")
                        .HasColumnType("bigint");

                    b.Property<long?>("VisaProcessId3")
                        .HasColumnType("bigint");

                    b.Property<long?>("VisaProcessId4")
                        .HasColumnType("bigint");

                    b.Property<long?>("VisaProcessId5")
                        .HasColumnType("bigint");

                    b.Property<long?>("VisaProcessId6")
                        .HasColumnType("bigint");

                    b.Property<long?>("VisaProcessId7")
                        .HasColumnType("bigint");

                    b.Property<long?>("VisaProcessId8")
                        .HasColumnType("bigint");

                    b.Property<string>("visaProcessId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("VisaProcessId");

                    b.HasIndex("VisaProcessId1");

                    b.HasIndex("VisaProcessId2");

                    b.HasIndex("VisaProcessId3");

                    b.HasIndex("VisaProcessId4");

                    b.HasIndex("VisaProcessId5");

                    b.HasIndex("VisaProcessId6");

                    b.HasIndex("VisaProcessId7");

                    b.HasIndex("VisaProcessId8");

                    b.ToTable("ReportDto");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Agent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentGLCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArabicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CityId")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("StateId");

                    b.ToTable("Agent");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.AspNetRoleClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.AspNetRoles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("([NormalizedName] IS NOT NULL)");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.AspNetUserClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.AspNetUserLogins", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.AspNetUserRoles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.AspNetUserTokens", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.AspNetUsers", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("([NormalizedUserName] IS NOT NULL)");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.AssignTestCenterToPermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AssignDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("PermissionId")
                        .HasColumnType("bigint");

                    b.Property<long>("TestCenterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("AssignTestCenterToPermission");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.BulkInsertion", b =>
                {
                    b.Property<string>("BirthCountry")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("BulkSelectionMasterId")
                        .HasColumnType("bigint");

                    b.Property<string>("Cnic")
                        .HasColumnName("CNIC")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CnicexpiryDate")
                        .HasColumnName("CNICExpiryDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CnicissueDate")
                        .HasColumnName("CNICIssueDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("BulkInsertion");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.BulkSelectionMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("TotalRecords")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UploadDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("BulkSelectionMaster");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.CandidateBulkSelection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BatchNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CandidateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CnicIssueDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CnicNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContrctDuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContrctDurationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpiryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Food")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportIssueDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelectionTrade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passportExpiryDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CandidateBulkSelection");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.CandidateDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CandidateProfileId")
                        .HasColumnType("bigint");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("FileTypeEntitySetupId")
                        .HasColumnName("FileType_EntitySetupId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UploadDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("CandidateProfileId");

                    b.HasIndex("FileTypeEntitySetupId");

                    b.ToTable("CandidateDocument");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.CandidateProfile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AgentId")
                        .HasColumnType("bigint");

                    b.Property<string>("ArabicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessAddress")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BusinessPhone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CellNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Cnic")
                        .HasColumnName("CNIC")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<string>("Domicile")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FatherArabicName")
                        .HasColumnName("Father_ArabicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("HomeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HusbandArabicName")
                        .HasColumnName("Husband_ArabicName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("HusbandName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PermanentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("PlaceOfBirthCityId")
                        .HasColumnName("PlaceOfBirth_CityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PlaceOfBirthCountryId")
                        .HasColumnName("PlaceOfBirth_CountryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PreviousNationalityCountryId")
                        .HasColumnName("PreviousNationality_CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Qualification")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ReferenceName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ReferencePhone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Sect")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("PlaceOfBirthCityId");

                    b.HasIndex("PlaceOfBirthCountryId");

                    b.HasIndex("PreviousNationalityCountryId");

                    b.ToTable("CandidateProfile");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.CandidateSelection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("SelectionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SelectionGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SponserId")
                        .HasColumnType("bigint")
                        .HasComment("SponserId for which the selection is done.");

                    b.HasKey("Id");

                    b.HasIndex("SponserId");

                    b.ToTable("CandidateSelection");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.CandidateSelectionDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CandidateProfileId")
                        .HasColumnType("bigint");

                    b.Property<long>("CandidateSelectionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CandidateProfileId");

                    b.HasIndex("CandidateSelectionId");

                    b.ToTable("CandidateSelectionDetail");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.CandidatejobDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccommodationDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirTicketDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CandidateSelectionDetailId")
                        .HasColumnType("bigint");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("DurationMonths")
                        .HasColumnType("int");

                    b.Property<int?>("DurationYears")
                        .HasColumnType("int");

                    b.Property<int?>("DutyHours")
                        .HasColumnType("int");

                    b.Property<string>("FoodDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAccommodation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAirTicket")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFood")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMedical")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOthers")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOvertime")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTransport")
                        .HasColumnType("bit");

                    b.Property<string>("MedicalDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OthersDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OvertimeDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ReferenceName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ReferencePhone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double?>("Salary")
                        .HasColumnType("float");

                    b.Property<long?>("SelectionTradeEntitySetupId")
                        .HasColumnName("SelectionTrade_EntitySetupId")
                        .HasColumnType("bigint");

                    b.Property<string>("TransportDetail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CandidateSelectionDetailId");

                    b.HasIndex("SelectionTradeEntitySetupId");

                    b.ToTable("CandidatejobDetail");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.City", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("ArabicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArabicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CityId")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("StateId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Counslate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CityId")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("StateId");

                    b.ToTable("Counslate");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.CounslateVisaFormTemplate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("CounslateId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte[]>("TemplateFile")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("CounslateId");

                    b.ToTable("CounslateVisaFormTemplate");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Country", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("ArabicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Dependent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArabicName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("CandidateProfileId")
                        .HasColumnType("bigint");

                    b.Property<string>("Cnic")
                        .HasColumnName("CNIC")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Dob")
                        .HasColumnName("DOB")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Relationship")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CandidateProfileId");

                    b.ToTable("Dependent");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.EntitySetup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArabicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EntityTypeId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("EntityTypeId");

                    b.ToTable("EntitySetup");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.EntityType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("EntityType");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Expenses", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Amount")
                        .HasColumnType("bigint");

                    b.Property<long?>("Balance")
                        .HasColumnType("bigint");

                    b.Property<string>("BankAccoutNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CandidateProfileId")
                        .HasColumnType("bigint");

                    b.Property<string>("CheqNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EntitySetupId")
                        .HasColumnType("bigint");

                    b.Property<string>("GlStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiptType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<long?>("VisaProcessId")
                        .HasColumnType("bigint");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CandidateProfileId");

                    b.HasIndex("EntitySetupId");

                    b.HasIndex("VisaProcessId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.FollowUp", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CandidateSelectionDetailId")
                        .HasColumnType("bigint");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("FollowUpDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CandidateSelectionDetailId");

                    b.ToTable("FollowUp");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Invoice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Amount")
                        .HasColumnType("bigint");

                    b.Property<long?>("Balance")
                        .HasColumnType("bigint");

                    b.Property<long?>("CandidateProfileId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InvoiceNo")
                        .HasColumnType("bigint");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<long?>("VisaProcessId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CandidateProfileId");

                    b.HasIndex("VisaProcessId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Medical", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CandidateProfileId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateExamined")
                        .HasColumnType("datetime");

                    b.Property<string>("GccslipNo")
                        .HasColumnName("GCCSlipNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GhccodeNo")
                        .HasColumnName("GHCCodeNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MedicalCenterName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ReportExpiryDate")
                        .HasColumnType("datetime");

                    b.Property<long?>("SponserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CandidateProfileId");

                    b.HasIndex("SponserId");

                    b.ToTable("Medical");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.MedicalCenter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CityId")
                        .HasColumnType("bigint");

                    b.Property<string>("Gccslip")
                        .HasColumnName("GCCSlip")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Ghccode")
                        .HasColumnName("GHCCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("MedicalCenter");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Mehrum", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArabicName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("CandidateProfileId")
                        .HasColumnType("bigint");

                    b.Property<string>("Cnic")
                        .HasColumnName("CNIC")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Dob")
                        .HasColumnName("DOB")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Relationship")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CandidateProfileId");

                    b.ToTable("Mehrum");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Nominee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArabicName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("CandidateProfileId")
                        .HasColumnType("bigint");

                    b.Property<string>("Cnic")
                        .HasColumnName("CNIC")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Dob")
                        .HasColumnName("DOB")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Relationship")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CandidateProfileId");

                    b.ToTable("Nominee");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Oep", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArabicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CityId")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("StateId");

                    b.ToTable("OEP");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Oeplicense", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Boaddress")
                        .HasColumnName("BOAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Hoaddress")
                        .HasColumnName("HOAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long>("Oepid")
                        .HasColumnName("OEPId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OepstatusEntitySetupId")
                        .HasColumnName("OEPStatus_EntitySetupId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProprieterName")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Oepid");

                    b.HasIndex("OepstatusEntitySetupId");

                    b.ToTable("OEPLicense");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.OepvisaDemand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AbroadClientName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AbroadClientPhone")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BatchNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<long?>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ClientPhone")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("CounslateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ExpiryDays")
                        .HasColumnType("int");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime");

                    b.Property<long?>("Oepid")
                        .HasColumnName("OEPId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OepvisaDemandStatusEntitySetupId")
                        .HasColumnName("OEPVisaDemandStatus_EntitySetupId")
                        .HasColumnType("bigint");

                    b.Property<string>("PurchaseGlcode")
                        .HasColumnName("PurchaseGLCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReceivingDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SponserGlcode")
                        .HasColumnName("SponserGLCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SponserGroup")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("SponserId")
                        .HasColumnType("bigint");

                    b.Property<string>("VisaExpire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisaNumberDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("VisaNumberExpiryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("VisaType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("CounslateId");

                    b.HasIndex("CountryId");

                    b.HasIndex("Oepid");

                    b.HasIndex("OepvisaDemandStatusEntitySetupId");

                    b.HasIndex("SponserId");

                    b.ToTable("OEPVisaDemand");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.OepvisaDemandDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccommodationDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirTicketDetail")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<long?>("CityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<int?>("DurationMonths")
                        .HasColumnType("int");

                    b.Property<int?>("DurationYears")
                        .HasColumnType("int");

                    b.Property<string>("FoodDetail")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("IsAccommodation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAirTicket")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFood")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMedical")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOthers")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOverTime")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTransport")
                        .HasColumnType("bit");

                    b.Property<long?>("JobTypeEntitySetupId")
                        .HasColumnName("JobType_EntitySetupId")
                        .HasColumnType("bigint");

                    b.Property<double?>("MaxSalary")
                        .HasColumnType("float");

                    b.Property<string>("MedicalDetail")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<double?>("MinSalary")
                        .HasColumnType("float");

                    b.Property<long?>("OepvisaDemandId")
                        .HasColumnName("OEPVisaDemandId")
                        .HasColumnType("bigint");

                    b.Property<string>("OthersDetail")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("OverTimeDetail")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.Property<string>("TransportDetail")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("JobTypeEntitySetupId");

                    b.HasIndex("OepvisaDemandId");

                    b.HasIndex("StateId");

                    b.ToTable("OEPVisaDemandDetail");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.OepvisaDemandPo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AbroadClientName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AbroadClientPhone")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BatchNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<long?>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ClientPhone")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("CounslateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ExpiryDays")
                        .HasColumnType("int");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Mode")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<long?>("Oepid")
                        .HasColumnName("OEPId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OepvisaDemandPostatusEntitySetupId")
                        .HasColumnName("OEPVisaDemandPOStatus_EntitySetupId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Podate")
                        .HasColumnName("PODate")
                        .HasColumnType("datetime");

                    b.Property<string>("PurchaseGlcode")
                        .HasColumnName("PurchaseGLCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReceivingDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SponserGlcode")
                        .HasColumnName("SponserGLCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SponserGroup")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("SponserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("VisaNumberDate")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("VisaNumberExpiryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("VisaType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("CounslateId");

                    b.HasIndex("CountryId");

                    b.HasIndex("Oepid");

                    b.HasIndex("OepvisaDemandPostatusEntitySetupId");

                    b.HasIndex("SponserId");

                    b.ToTable("OEPVisaDemandPO");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.OepvisaDemandPodetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccommodationDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirTicketDetail")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<long?>("CityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<int?>("DurationMonths")
                        .HasColumnType("int");

                    b.Property<int?>("DurationYears")
                        .HasColumnType("int");

                    b.Property<string>("FoodDetail")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("IsAccommodation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAirTicket")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFood")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMedical")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOthers")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOverTime")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTransport")
                        .HasColumnType("bit");

                    b.Property<long?>("JobTypeEntitySetupId")
                        .HasColumnName("JobType_EntitySetupId")
                        .HasColumnType("bigint");

                    b.Property<double?>("MaxSalary")
                        .HasColumnType("float");

                    b.Property<string>("MedicalDetail")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<double?>("MinSalary")
                        .HasColumnType("float");

                    b.Property<long?>("OepvisaDemandPoid")
                        .HasColumnName("OEPVisaDemandPOId")
                        .HasColumnType("bigint");

                    b.Property<string>("OthersDetail")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("OverTimeDetail")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.Property<string>("TransportDetail")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("JobTypeEntitySetupId");

                    b.HasIndex("OepvisaDemandPoid");

                    b.HasIndex("StateId");

                    b.ToTable("OEPVisaDemandPODetail");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Passport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CandidateProfileId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PassportNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("PlaceOfBirthCityId")
                        .HasColumnName("PlaceOfBirth_CityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PlaceOfBirthCountryId")
                        .HasColumnName("PlaceOfBirth_CountryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PlaceOfBirthStateId")
                        .HasColumnName("PlaceOfBirth_StateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PlaceOfIssueCountryId")
                        .HasColumnName("PlaceOfIssue_CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CandidateProfileId");

                    b.HasIndex("PlaceOfBirthCityId");

                    b.HasIndex("PlaceOfBirthCountryId");

                    b.HasIndex("PlaceOfBirthStateId");

                    b.HasIndex("PlaceOfIssueCountryId");

                    b.ToTable("Passport");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.PermissionDocumentMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("DocumentTypeEntitySetupId")
                        .HasColumnName("DocumentType_EntitySetupId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("PermissionTypeEntitySetupId")
                        .HasColumnName("PermissionType_EntitySetupId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DocumentTypeEntitySetupId");

                    b.HasIndex("PermissionTypeEntitySetupId");

                    b.ToTable("PermissionDocumentMap");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.PermissionRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApplyDate")
                        .HasColumnType("datetime");

                    b.Property<long?>("OepvisaDemandId")
                        .HasColumnName("OEPVisaDemandId")
                        .HasColumnType("bigint");

                    b.Property<string>("PermissionNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("PermissionTypeEntitySetupId")
                        .HasColumnName("PermissionType_EntitySetupId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ReceivingDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ValidityDate")
                        .HasColumnType("datetime")
                        .HasComment("ReceivingDate + 120");

                    b.HasKey("Id");

                    b.HasIndex("OepvisaDemandId");

                    b.ToTable("PermissionRequest");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Receipt", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("BankAccoutNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CandidateProfileId")
                        .HasColumnType("bigint");

                    b.Property<string>("CheqNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("GlStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiptNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiptType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("VisaProcessId")
                        .HasColumnType("bigint");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CandidateProfileId");

                    b.HasIndex("VisaProcessId");

                    b.ToTable("Receipt");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Receipts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceiptNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.ReceiptsDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<long?>("AgentId1")
                        .HasColumnType("bigint");

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CandidateProfileId")
                        .HasColumnType("int");

                    b.Property<long?>("CandidateProfileId1")
                        .HasColumnType("bigint");

                    b.Property<string>("CheckNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OepVisaDemandId")
                        .HasColumnType("int");

                    b.Property<long?>("OepvisaDemandId")
                        .HasColumnType("bigint");

                    b.Property<int>("ReceiptsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgentId1");

                    b.HasIndex("CandidateProfileId1");

                    b.HasIndex("OepvisaDemandId");

                    b.ToTable("ReceiptsDetail");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.SelectionAddCandidateMaster", b =>
                {
                    b.Property<long>("BatchNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateOfInterview")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfUploading")
                        .HasColumnType("datetime2");

                    b.Property<string>("ListFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfInterview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelectionGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SponserId")
                        .HasColumnType("bigint");

                    b.HasKey("BatchNumber");

                    b.ToTable("SelectionAddCandidateMaster");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.SelectionQtyDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CandidateSelectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("EntitySetupId")
                        .HasColumnType("bigint");

                    b.Property<long>("SelectionQty")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EntitySetupId");

                    b.ToTable("SelectionQtyDetail");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Sponser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArabicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CityId")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CompanyShortName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("StateId");

                    b.ToTable("Sponser");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.State", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("ArabicName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("State");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.TestCenter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArabicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CityId")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("StateId");

                    b.ToTable("TestCenter");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Vaccine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CandidateProfileId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("VaccineDate")
                        .HasColumnType("datetime");

                    b.Property<string>("VaccineDose")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long?>("VaccineTypeEntitySetupId")
                        .HasColumnName("VaccineType_EntitySetupId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("VaccineValidity")
                        .HasColumnType("datetime");

                    b.Property<long?>("VaccineVariantEntitySetupId")
                        .HasColumnName("VaccineVariant_EntitySetupId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CandidateProfileId");

                    b.HasIndex("VaccineTypeEntitySetupId");

                    b.HasIndex("VaccineVariantEntitySetupId");

                    b.ToTable("Vaccine");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.VisaProcess", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ArrivalDate1")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ArrivalDate2")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ArrivalDate3")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("BiometricReceivingDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("BiometricSendingDate")
                        .HasColumnType("datetime");

                    b.Property<long?>("CandidateSelectionDetailId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateOfCloure")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DepartureDate1")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DepartureDate2")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DepartureDate3")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DocumentHandoverDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DocumentReceivingDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Enumber")
                        .HasColumnName("ENumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("EnumberDate")
                        .HasColumnName("ENumberDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FlightNumber1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FlightNumber2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FlightNumber3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("MedicalOnlineReceivingDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("MedicalOnlineSendingDate")
                        .HasColumnType("datetime");

                    b.Property<long?>("OepvisaDemandId")
                        .HasColumnName("OEPVisaDemandId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("PassportReceivingDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PassportSubmissionDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ProcessingStartDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("Sector1From")
                        .HasColumnType("bigint");

                    b.Property<long?>("Sector1To")
                        .HasColumnType("bigint");

                    b.Property<long?>("Sector2From")
                        .HasColumnType("bigint");

                    b.Property<long?>("Sector2To")
                        .HasColumnType("bigint");

                    b.Property<long?>("Sector3From")
                        .HasColumnType("bigint");

                    b.Property<long?>("Sector3To")
                        .HasColumnType("bigint");

                    b.Property<long?>("StatusEntitySetupId")
                        .HasColumnName("Status_EntitySetupId")
                        .HasColumnType("bigint");

                    b.Property<string>("StatusRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicketNumber1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TicketNumber2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TicketNumber3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("VisaTradeEntitySetupId")
                        .HasColumnName("VisaTrade_EntitySetupId")
                        .HasColumnType("bigint");

                    b.Property<string>("VisisSerialNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CandidateSelectionDetailId");

                    b.HasIndex("OepvisaDemandId");

                    b.HasIndex("Sector1From");

                    b.HasIndex("Sector1To");

                    b.HasIndex("Sector2From");

                    b.HasIndex("Sector2To");

                    b.HasIndex("Sector3From");

                    b.HasIndex("Sector3To");

                    b.HasIndex("StatusEntitySetupId");

                    b.HasIndex("VisaTradeEntitySetupId");

                    b.ToTable("VisaProcess");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.DTO.ReportDto", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.VisaProcess", null)
                        .WithMany("Biometric")
                        .HasForeignKey("VisaProcessId");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.VisaProcess", null)
                        .WithMany("CaseCloure")
                        .HasForeignKey("VisaProcessId1");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.VisaProcess", null)
                        .WithMany("Deployment")
                        .HasForeignKey("VisaProcessId2");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.VisaProcess", null)
                        .WithMany("Endorsement")
                        .HasForeignKey("VisaProcessId3");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.VisaProcess", null)
                        .WithMany("MedicalOnline")
                        .HasForeignKey("VisaProcessId4");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.VisaProcess", null)
                        .WithMany("Protector")
                        .HasForeignKey("VisaProcessId5");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.VisaProcess", null)
                        .WithMany("Start")
                        .HasForeignKey("VisaProcessId6");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.VisaProcess", null)
                        .WithMany("Submission")
                        .HasForeignKey("VisaProcessId7");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.VisaProcess", null)
                        .WithMany("TravelBooking")
                        .HasForeignKey("VisaProcessId8");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Agent", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.City", "City")
                        .WithMany("Agent")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_Agent_City");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Country", "Country")
                        .WithMany("Agent")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Agent_Country");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.State", "State")
                        .WithMany("Agent")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_Agent_State");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.AspNetRoleClaims", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.AspNetRoles", "Role")
                        .WithMany("AspNetRoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.AspNetUserClaims", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.AspNetUsers", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.AspNetUserLogins", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.AspNetUsers", "User")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.AspNetUserRoles", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.AspNetRoles", "Role")
                        .WithMany("AspNetUserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.AspNetUsers", "User")
                        .WithMany("AspNetUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.AspNetUserTokens", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.AspNetUsers", "User")
                        .WithMany("AspNetUserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.CandidateDocument", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.CandidateProfile", "CandidateProfile")
                        .WithMany("CandidateDocument")
                        .HasForeignKey("CandidateProfileId")
                        .HasConstraintName("FK_CandidateDocument_CandidateProfile");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.EntitySetup", "FileTypeEntitySetup")
                        .WithMany("CandidateDocument")
                        .HasForeignKey("FileTypeEntitySetupId")
                        .HasConstraintName("FK_CandidateDocument_EntitySetup");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.CandidateProfile", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Agent", "Agent")
                        .WithMany("CandidateProfile")
                        .HasForeignKey("AgentId")
                        .HasConstraintName("FK_CandidateProfile_Agent");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.City", "PlaceOfBirthCity")
                        .WithMany("CandidateProfile")
                        .HasForeignKey("PlaceOfBirthCityId")
                        .HasConstraintName("FK_CandidateProfile_City");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Country", "PlaceOfBirthCountry")
                        .WithMany("CandidateProfilePlaceOfBirthCountry")
                        .HasForeignKey("PlaceOfBirthCountryId")
                        .HasConstraintName("FK_CandidateProfile_Country");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Country", "PreviousNationalityCountry")
                        .WithMany("CandidateProfilePreviousNationalityCountry")
                        .HasForeignKey("PreviousNationalityCountryId")
                        .HasConstraintName("FK_CandidateProfile_Country1");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.CandidateSelection", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Sponser", "Sponser")
                        .WithMany("CandidateSelection")
                        .HasForeignKey("SponserId")
                        .HasConstraintName("FK_CandidateSelection_Sponser")
                        .IsRequired();
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.CandidateSelectionDetail", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.CandidateProfile", "CandidateProfile")
                        .WithMany("CandidateSelectionDetail")
                        .HasForeignKey("CandidateProfileId")
                        .HasConstraintName("FK_CandidateSelectionDetail_CandidateProfile")
                        .IsRequired();

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.CandidateSelection", "CandidateSelection")
                        .WithMany("CandidateSelectionDetail")
                        .HasForeignKey("CandidateSelectionId")
                        .HasConstraintName("FK_CandidateSelectionDetail_CandidateSelection")
                        .IsRequired();
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.CandidatejobDetail", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.CandidateSelectionDetail", "CandidateSelectionDetail")
                        .WithMany("CandidatejobDetail")
                        .HasForeignKey("CandidateSelectionDetailId")
                        .HasConstraintName("FK_CandidatejobDetail_CandidateSelectionDetail")
                        .IsRequired();

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.EntitySetup", "SelectionTradeEntitySetup")
                        .WithMany("CandidatejobDetail")
                        .HasForeignKey("SelectionTradeEntitySetupId")
                        .HasConstraintName("FK_CandidatejobDetail_EntitySetup");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.City", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.State", "State")
                        .WithMany("City")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_City_Region")
                        .IsRequired();
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Client", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.City", "City")
                        .WithMany("Client")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_Client_City");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Country", "Country")
                        .WithMany("Client")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Client_Country");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.State", "State")
                        .WithMany("Client")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_Client_State");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Counslate", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.City", "City")
                        .WithMany("Counslate")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_Counslate_City");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Country", "Country")
                        .WithMany("Counslate")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Counslate_Country");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.State", "State")
                        .WithMany("Counslate")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_Counslate_State");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.CounslateVisaFormTemplate", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Counslate", "Counslate")
                        .WithMany("CounslateVisaFormTemplate")
                        .HasForeignKey("CounslateId")
                        .HasConstraintName("FK_CounslateVisaFormTemplate_Counslate");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Dependent", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.CandidateProfile", "CandidateProfile")
                        .WithMany("Dependent")
                        .HasForeignKey("CandidateProfileId")
                        .HasConstraintName("FK_Dependent_CandidateProfile");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.EntitySetup", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.EntityType", "EntityType")
                        .WithMany("EntitySetup")
                        .HasForeignKey("EntityTypeId")
                        .HasConstraintName("FK_EntitySetup_EntityType")
                        .IsRequired();
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Expenses", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.CandidateProfile", "CandidateProfile")
                        .WithMany()
                        .HasForeignKey("CandidateProfileId");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.EntitySetup", "EntitySetup")
                        .WithMany()
                        .HasForeignKey("EntitySetupId");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.VisaProcess", "VisaProcess")
                        .WithMany()
                        .HasForeignKey("VisaProcessId");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.FollowUp", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.CandidateSelectionDetail", "CandidateSelectionDetail")
                        .WithMany("FollowUp")
                        .HasForeignKey("CandidateSelectionDetailId")
                        .HasConstraintName("FK_FollowUp_CandidateSelectionDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Invoice", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.CandidateProfile", "CandidateProfile")
                        .WithMany()
                        .HasForeignKey("CandidateProfileId");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.VisaProcess", "VisaProcess")
                        .WithMany()
                        .HasForeignKey("VisaProcessId");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Medical", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.CandidateProfile", "CandidateProfile")
                        .WithMany("Medical")
                        .HasForeignKey("CandidateProfileId")
                        .HasConstraintName("FK_Medical_CandidateProfile1");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Sponser", "Sponser")
                        .WithMany("Medical")
                        .HasForeignKey("SponserId")
                        .HasConstraintName("FK_Medical_Sponser");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.MedicalCenter", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.City", "City")
                        .WithMany("MedicalCenter")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_MedicalCenter_City");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Mehrum", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.CandidateProfile", "CandidateProfile")
                        .WithMany("Mehrum")
                        .HasForeignKey("CandidateProfileId")
                        .HasConstraintName("FK_Mehrum_CandidateProfile");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Nominee", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.CandidateProfile", "CandidateProfile")
                        .WithMany("Nominee")
                        .HasForeignKey("CandidateProfileId")
                        .HasConstraintName("FK_Nominee_CandidateProfile");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Oep", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.City", "City")
                        .WithMany("Oep")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_OEP_City");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Country", "Country")
                        .WithMany("Oep")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_OEP_Country");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.State", "State")
                        .WithMany("Oep")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_OEP_State");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Oeplicense", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Oep", "Oep")
                        .WithMany("Oeplicense")
                        .HasForeignKey("Oepid")
                        .HasConstraintName("FK_OEPLicense_OEP")
                        .IsRequired();

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.EntitySetup", "OepstatusEntitySetup")
                        .WithMany("Oeplicense")
                        .HasForeignKey("OepstatusEntitySetupId")
                        .HasConstraintName("FK_OEPLicense_EntitySetup");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.OepvisaDemand", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Client", "Client")
                        .WithMany("OepvisaDemand")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_OEPVisaDemand_Client");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Counslate", "Counslate")
                        .WithMany("OepvisaDemand")
                        .HasForeignKey("CounslateId")
                        .HasConstraintName("FK_OEPVisaDemand_Counslate");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Country", "Country")
                        .WithMany("OepvisaDemand")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_OEPVisaDemand_Country");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Oep", "Oep")
                        .WithMany("OepvisaDemand")
                        .HasForeignKey("Oepid")
                        .HasConstraintName("FK_OEPVisaDemand_OEP");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.EntitySetup", "OepvisaDemandStatusEntitySetup")
                        .WithMany("OepvisaDemand")
                        .HasForeignKey("OepvisaDemandStatusEntitySetupId")
                        .HasConstraintName("FK_OEPVisaDemand_EntitySetup");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Sponser", "Sponser")
                        .WithMany("OepvisaDemand")
                        .HasForeignKey("SponserId")
                        .HasConstraintName("FK_OEPVisaDemand_Sponser");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.OepvisaDemandDetail", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.City", "City")
                        .WithMany("OepvisaDemandDetail")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_OEPVisaDemandDetail_City");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Country", "Country")
                        .WithMany("OepvisaDemandDetail")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_OEPVisaDemandDetail_Country");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.EntitySetup", "JobTypeEntitySetup")
                        .WithMany("OepvisaDemandDetail")
                        .HasForeignKey("JobTypeEntitySetupId")
                        .HasConstraintName("FK_OEPVisaDemandDetail_EntitySetup");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.OepvisaDemand", "OepvisaDemand")
                        .WithMany("OepvisaDemandDetail")
                        .HasForeignKey("OepvisaDemandId")
                        .HasConstraintName("FK_OEPVisaDemandDetail_OEPVisaDemand");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.State", "State")
                        .WithMany("OepvisaDemandDetail")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_OEPVisaDemandDetail_State");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.OepvisaDemandPo", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Client", "Client")
                        .WithMany("OepvisaDemandPo")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_OEPVisaDemandPO_Client");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Counslate", "Counslate")
                        .WithMany("OepvisaDemandPo")
                        .HasForeignKey("CounslateId")
                        .HasConstraintName("FK_OEPVisaDemandPO_Counslate");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Country", "Country")
                        .WithMany("OepvisaDemandPo")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_OEPVisaDemandPO_Country");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Oep", "Oep")
                        .WithMany("OepvisaDemandPo")
                        .HasForeignKey("Oepid")
                        .HasConstraintName("FK_OEPVisaDemandPO_OEP");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.EntitySetup", "OepvisaDemandPostatusEntitySetup")
                        .WithMany("OepvisaDemandPo")
                        .HasForeignKey("OepvisaDemandPostatusEntitySetupId")
                        .HasConstraintName("FK_OEPVisaDemandPO_EntitySetup");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Sponser", "Sponser")
                        .WithMany("OepvisaDemandPo")
                        .HasForeignKey("SponserId")
                        .HasConstraintName("FK_OEPVisaDemandPO_Sponser");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.OepvisaDemandPodetail", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.City", "City")
                        .WithMany("OepvisaDemandPodetail")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_OEPVisaDemandPODetail_City");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Country", "Country")
                        .WithMany("OepvisaDemandPodetail")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_OEPVisaDemandPODetail_Country");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.EntitySetup", "JobTypeEntitySetup")
                        .WithMany("OepvisaDemandPodetail")
                        .HasForeignKey("JobTypeEntitySetupId")
                        .HasConstraintName("FK_OEPVisaDemandPODetail_EntitySetup");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.OepvisaDemandPo", "OepvisaDemandPo")
                        .WithMany("OepvisaDemandPodetail")
                        .HasForeignKey("OepvisaDemandPoid")
                        .HasConstraintName("FK_OEPVisaDemandPODetail_OEPVisaDemandPO");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.State", "State")
                        .WithMany("OepvisaDemandPodetail")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_OEPVisaDemandPODetail_State");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Passport", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.CandidateProfile", "CandidateProfile")
                        .WithMany("Passport")
                        .HasForeignKey("CandidateProfileId")
                        .HasConstraintName("FK_Passport_CandidateProfile")
                        .IsRequired();

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.City", "PlaceOfBirthCity")
                        .WithMany("Passport")
                        .HasForeignKey("PlaceOfBirthCityId")
                        .HasConstraintName("FK_Passport_City");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Country", "PlaceOfBirthCountry")
                        .WithMany("PassportPlaceOfBirthCountry")
                        .HasForeignKey("PlaceOfBirthCountryId")
                        .HasConstraintName("FK_Passport_Country1");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.State", "PlaceOfBirthState")
                        .WithMany("Passport")
                        .HasForeignKey("PlaceOfBirthStateId")
                        .HasConstraintName("FK_Passport_State");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Country", "PlaceOfIssueCountry")
                        .WithMany("PassportPlaceOfIssueCountry")
                        .HasForeignKey("PlaceOfIssueCountryId")
                        .HasConstraintName("FK_Passport_Country");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.PermissionDocumentMap", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.EntitySetup", "DocumentTypeEntitySetup")
                        .WithMany("PermissionDocumentMapDocumentTypeEntitySetup")
                        .HasForeignKey("DocumentTypeEntitySetupId")
                        .HasConstraintName("FK_PermissionDocumentMap_EntitySetup1");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.EntitySetup", "PermissionTypeEntitySetup")
                        .WithMany("PermissionDocumentMapPermissionTypeEntitySetup")
                        .HasForeignKey("PermissionTypeEntitySetupId")
                        .HasConstraintName("FK_PermissionDocumentMap_EntitySetup");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.PermissionRequest", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.OepvisaDemand", "OepvisaDemand")
                        .WithMany("PermissionRequest")
                        .HasForeignKey("OepvisaDemandId")
                        .HasConstraintName("FK_PermissionRequest_OEPVisaDemand");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Receipt", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.CandidateProfile", "CandidateProfile")
                        .WithMany()
                        .HasForeignKey("CandidateProfileId");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.VisaProcess", "VisaProcess")
                        .WithMany()
                        .HasForeignKey("VisaProcessId");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.ReceiptsDetail", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId1");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.CandidateProfile", "CandidateProfile")
                        .WithMany()
                        .HasForeignKey("CandidateProfileId1");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.OepvisaDemand", "OepvisaDemand")
                        .WithMany()
                        .HasForeignKey("OepvisaDemandId");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.SelectionQtyDetail", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.EntitySetup", "EntitySetup")
                        .WithMany()
                        .HasForeignKey("EntitySetupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Sponser", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.City", "City")
                        .WithMany("Sponser")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_Sponser_City");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Country", "Country")
                        .WithMany("Sponser")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Sponser_Country");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.State", "State")
                        .WithMany("Sponser")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_Sponser_State");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.State", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Country", "Country")
                        .WithMany("State")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Region_Country")
                        .IsRequired();
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.TestCenter", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.City", "City")
                        .WithMany("TestCenter")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_TestCenter_City");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.Country", "Country")
                        .WithMany("TestCenter")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_TestCenter_Country");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.State", "State")
                        .WithMany("TestCenter")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_TestCenter_State");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.Vaccine", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.CandidateProfile", "CandidateProfile")
                        .WithMany("Vaccine")
                        .HasForeignKey("CandidateProfileId")
                        .HasConstraintName("FK_Vaccine_CandidateProfile1");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.EntitySetup", "VaccineTypeEntitySetup")
                        .WithMany("VaccineVaccineTypeEntitySetup")
                        .HasForeignKey("VaccineTypeEntitySetupId")
                        .HasConstraintName("FK_Vaccine_EntitySetup");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.EntitySetup", "VaccineVariantEntitySetup")
                        .WithMany("VaccineVaccineVariantEntitySetup")
                        .HasForeignKey("VaccineVariantEntitySetupId")
                        .HasConstraintName("FK_Vaccine_EntitySetup1");
                });

            modelBuilder.Entity("Luna.Recruitment.VisaProcessing.Data.Models.VisaProcess", b =>
                {
                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.CandidateSelectionDetail", "CandidateSelectionDetail")
                        .WithMany("VisaProcess")
                        .HasForeignKey("CandidateSelectionDetailId")
                        .HasConstraintName("FK_VisaProcessing_CandidateSelectionDetail");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.OepvisaDemand", "OepvisaDemand")
                        .WithMany("VisaProcess")
                        .HasForeignKey("OepvisaDemandId")
                        .HasConstraintName("FK_VisaProcessing_OEPVisaDemand");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.EntitySetup", "Sector1FromNavigation")
                        .WithMany("VisaProcessSector1FromNavigation")
                        .HasForeignKey("Sector1From")
                        .HasConstraintName("FK_VisaProcess_EntitySetup");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.EntitySetup", "Sector1ToNavigation")
                        .WithMany("VisaProcessSector1ToNavigation")
                        .HasForeignKey("Sector1To")
                        .HasConstraintName("FK_VisaProcess_EntitySetup1");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.EntitySetup", "Sector2FromNavigation")
                        .WithMany("VisaProcessSector2FromNavigation")
                        .HasForeignKey("Sector2From")
                        .HasConstraintName("FK_VisaProcess_EntitySetup2");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.EntitySetup", "Sector2ToNavigation")
                        .WithMany("VisaProcessSector2ToNavigation")
                        .HasForeignKey("Sector2To")
                        .HasConstraintName("FK_VisaProcess_EntitySetup3");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.EntitySetup", "Sector3FromNavigation")
                        .WithMany("VisaProcessSector3FromNavigation")
                        .HasForeignKey("Sector3From")
                        .HasConstraintName("FK_VisaProcess_EntitySetup4");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.EntitySetup", "Sector3ToNavigation")
                        .WithMany("VisaProcessSector3ToNavigation")
                        .HasForeignKey("Sector3To")
                        .HasConstraintName("FK_VisaProcess_EntitySetup5");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.EntitySetup", "StatusEntitySetup")
                        .WithMany("VisaProcessStatusEntitySetup")
                        .HasForeignKey("StatusEntitySetupId")
                        .HasConstraintName("FK_VisaProcessing_EntitySetup1");

                    b.HasOne("Luna.Recruitment.VisaProcessing.Data.Models.EntitySetup", "VisaTradeEntitySetup")
                        .WithMany("VisaProcessVisaTradeEntitySetup")
                        .HasForeignKey("VisaTradeEntitySetupId")
                        .HasConstraintName("FK_VisaProcessing_EntitySetup");
                });
#pragma warning restore 612, 618
        }
    }
}
